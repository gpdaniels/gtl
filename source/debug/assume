/*
Copyright (C) 2018-2022 Geoffrey Daniels. https://gpdaniels.com/

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, version 3 of the License only.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/

#pragma once
#ifndef GTL_DEBUG_ASSUME_HPP
#define GTL_DEBUG_ASSUME_HPP

// Summary: Macro that hints to the compiler when a statement should be assumed true.

namespace gtl {
namespace assume {

#ifndef NDEBUG

    // This is a dangerous macro used to provide compiler hints in code.
    #if defined(__clang__)
        #define GTL_ASSUME(ASSUMPTION) __builtin_assume(ASSUMPTION)
    #elif (defined(__GNUC__) || defined(__GNUG__)) && (!defined(__clang__) && (!defined(__INTEL_COMPILER)))
        #define GTL_ASSUME(ASSUMPTION) static_cast<void>((ASSUMPTION) || (__builtin_unreachable(), 0))
    #elif defined(_MSC_VER)
        #define GTL_ASSUME(ASSUMPTION) __assume(ASSUMPTION)
    #else
        #define GTL_ASSUME(ASSUMPTION) static_cast<void>(0)
    #endif

#else

    #define GTL_ASSUME(ASSUMPTION) static_cast<void>(0)

#endif

}}

#endif // GTL_DEBUG_ASSUME_HPP
