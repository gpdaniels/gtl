/*
Copyright (C) 2018-2023 Geoffrey Daniels. https://gpdaniels.com/

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, version 3 of the License only.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/

#pragma once
#ifndef GTL_VISION_FEATURE_DESCRIPTOR_BEBLID_HPP
#define GTL_VISION_FEATURE_DESCRIPTOR_BEBLID_HPP

// Summary: Implemetation of feature description from the paper "BEBLID: Boosted Efficient Binary Local Image Descriptor". Pattern Recognition Letters (2020). [wip]

#if defined(_MSC_VER)
    #pragma warning(push, 0)
#endif

#include <cmath>

#if defined(_MSC_VER)
    #pragma warning(pop)
#endif

#include <vision/feature/binary_descriptor>

namespace gtl {
    void beblid(
        const int* __restrict const data_integral,
        const int stride,
        const float angle_degrees,
        gtl::binary_descriptor<32>& descriptor
    );
    void beblid(
        const int* __restrict const data_integral,
        const int stride,
        const float angle_degrees,
        gtl::binary_descriptor<32>& descriptor
    ) {
        constexpr static const int pattern_size = 256;
        constexpr static const auto round = [](float value) -> int {
            return static_cast<int>(value + 0.5f);
        };
        // A collection six parameters to define an Average Box Weak-Learner for each bit of the description.
        struct sample_point {
            int offset_x;
            int offset_y;
        };
        struct abwl_parameters {
            sample_point boxes[2];
            int radius;
            int threshold;
        };
        constexpr static const abwl_parameters pattern[pattern_size] = {
            { { {  10,   4 }, {  -2,   0 } }, 5, 16 }, { { {   1,   1 }, {  -1,  -1 } }, 2,  7 }, { { {   2,   0 }, {  -8,  -3 } }, 3, 18 }, { { {   3,  -1 }, {  -3,  -2 } }, 3, 17 },
            { { {   0,   0 }, { -11,  -1 } }, 4, 10 }, { { {   9,  -6 }, {   0,   0 } }, 6, 11 }, { { {   0,  -1 }, {  -4,  -1 } }, 1, 12 }, { { {   2,   1 }, {  -2,   1 } }, 1, 13 },
            { { {  -1,  -2 }, { -11,   5 } }, 5,  6 }, { { {  -2,  -2 }, {  -5,  -9 } }, 4,  2 }, { { {   7,  11 }, {   0,   1 } }, 4,  8 }, { { {  -4,   1 }, {  -6,   8 } }, 5,  0 },
            { { {  -1,  -1 }, {  -3,  -2 } }, 1,  6 }, { { {   0,   0 }, {  -2,   0 } }, 1,  7 }, { { {   3,   2 }, {   0,  -1 } }, 1,  6 }, { { {   8,  -9 }, {   3,  -1 } }, 6,  4 },
            { { {  -1,   0 }, { -10,  -8 } }, 5,  6 }, { { {   8,   0 }, {  -8,  -1 } }, 7, 22 }, { { {  -1, -10 }, {  -3,   0 } }, 4,  6 }, { { {   1,   3 }, {  -1,  -1 } }, 1,  6 },
            { { {   1,  -4 }, {   0,   0 } }, 1,  2 }, { { {  -5,  -1 }, {  -9,   9 } }, 6,  0 }, { { {  -1,  -1 }, {  -2,  -6 } }, 2,  2 }, { { {  10,  -1 }, {   2,   1 } }, 4,  6 },
            { { {   2,  -4 }, {   1,  11 } }, 4,  3 }, { { {  -7,  -1 }, { -10,  -8 } }, 6,  1 }, { { {  -1,   1 }, {  -2,   7 } }, 3,  1 }, { { {  -5,   1 }, { -12,  -2 } }, 4,  1 },
            { { {   6,   2 }, {   3, -11 } }, 5,  5 }, { { {  -5,   2 }, {  -5, -11 } }, 5,  3 }, { { {   6, -11 }, {   3,   3 } }, 5,  2 }, { { {  -4,  10 }, { -10,  -1 } }, 3,  5 },
            { { {   0,   0 }, {  -2,   2 } }, 1,  7 }, { { {   6,  10 }, {   6,  -3 } }, 5,  2 }, { { {   2,  -3 }, {   0,   0 } }, 1,  4 }, { { {  -2,  10 }, {  -3,  -6 } }, 5,  3 },
            { { {   1,  -3 }, {  -2,  -2 } }, 1, 10 }, { { {   5,   0 }, {   3,  -9 } }, 3,  4 }, { { {  -2,  -1 }, {  -2,  -3 } }, 1,  0 }, { { {  10,  10 }, {   4,   2 } }, 5,  1 },
            { { {  -4,  -6 }, {  -8,   5 } }, 4,  3 }, { { {  -2,   1 }, {  -3,  -9 } }, 3,  0 }, { { {  -3,  -4 }, {  -6,   3 } }, 2,  4 }, { { {   1,   4 }, {   1,  -3 } }, 2,  0 },
            { { {  -8,   9 }, { -10,  -5 } }, 6,  2 }, { { {  11,  -5 }, {   4,   8 } }, 4,  3 }, { { {  -2,   2 }, {  -4,  -2 } }, 2,  5 }, { { {   6,   3 }, {   2,   4 } }, 2,  5 },
            { { {   2, -12 }, {   1,  -2 } }, 3,  1 }, { { {  -3,  12 }, {  -3,   2 } }, 3,  3 }, { { {  -1,  -4 }, {  -2,   1 } }, 1,  4 }, { { {  -3,   4 }, {  -6,  -5 } }, 2,  3 },
            { { {  -6, -11 }, { -12,   1 } }, 4,  2 }, { { {  -9,   2 }, { -13,   2 } }, 3,  2 }, { { {   5,  -5 }, {  -1, -14 } }, 2, 11 }, { { {   4,  -1 }, {   1,   1 } }, 1,  6 },
            { { {  -6,   4 }, { -12,  11 } }, 4,  3 }, { { {   8,   9 }, {   7,  -9 } }, 6,  0 }, { { {   2,  -1 }, {   2,  -4 } }, 2,  0 }, { { {   1,   0 }, {   0,  -3 } }, 1,  3 },
            { { {  -2,   4 }, {  -2,  -1 } }, 1,  1 }, { { {   1,   1 }, {   1,  -2 } }, 1,  0 }, { { {  -9,  -1 }, { -10, -11 } }, 5,  3 }, { { {  -5,   5 }, {  -5,  -3 } }, 2,  1 },
            { { {   2,   0 }, {  -1,  -7 } }, 1,  7 }, { { {   3,   3 }, {   2,  -1 } }, 1,  2 }, { { {  12,   3 }, {   4,   0 } }, 3,  1 }, { { {  -2,   0 }, {  -5,  -6 } }, 1,  3 },
            { { {   6,  -3 }, {   3,  -2 } }, 1,  2 }, { { {  -7,  -6 }, { -12, -12 } }, 4,  3 }, { { {   4,  10 }, {  -6,  13 } }, 2, 12 }, { { {  -2,   1 }, {  -4,   3 } }, 1,  3 },
            { { {   5,   2 }, {   2,   8 } }, 2,  6 }, { { {   0,  -1 }, {  -1,   3 } }, 1,  4 }, { { {  11, -12 }, {   8,  -1 } }, 4,  2 }, { { {  -1,   6 }, {  -2, -10 } }, 2,  2 },
            { { {  -3,   0 }, {  -7,  -4 } }, 1,  2 }, { { {  -4,  -4 }, {  -5,   2 } }, 1,  2 }, { { {   6,   1 }, {   4,  -5 } }, 2,  2 }, { { {   2,  12 }, {   1,   7 } }, 3,  1 },
            { { { -10,  -7 }, { -11,   5 } }, 4,  0 }, { { {  -4, -13 }, {  -8,  -5 } }, 3,  5 }, { { {   5,   0 }, {   3,   0 } }, 1,  2 }, { { {   2,   0 }, {   1,   3 } }, 1,  2 },
            { { {  11,  -4 }, {   6, -13 } }, 3,  2 }, { { {  -3,  11 }, { -12,  10 } }, 4,  3 }, { { { -11,   6 }, { -13,  10 } }, 3,  2 }, { { {   8,  12 }, {   7,   4 } }, 3,  2 },
            { { {  -5,   1 }, {  -8,   3 } }, 2,  0 }, { { {  -3,   0 }, {  -5,   0 } }, 1,  3 }, { { {   2,  -1 }, {   2,  -8 } }, 2,  1 }, { { {  -1,   1 }, {  -2,  -2 } }, 1,  3 },
            { { {   3,  -2 }, {   1,  -4 } }, 1,  4 }, { { {   9,  -6 }, {   6,   4 } }, 2,  0 }, { { {  -2,  -4 }, {  -3,  -7 } }, 1,  1 }, { { {  -7,  -6 }, { -13,  -7 } }, 3,  2 },
            { { {   4,   6 }, {   3,   1 } }, 1,  0 }, { { {   0,   8 }, {   0,  -6 } }, 2,  0 }, { { {  -1,   7 }, {  -3,  13 } }, 2,  2 }, { { {  -1,   4 }, {  -2,   1 } }, 1,  4 },
            { { {  11,  11 }, {   6,  11 } }, 4,  1 }, { { {  -2,  -9 }, { -10, -13 } }, 3,  3 }, { { {   5, -13 }, {   4,  -9 } }, 3,  0 }, { { {  13, -11 }, {   9,  -5 } }, 2,  1 },
            { { {  -1,   5 }, {  -1,   4 } }, 1,  0 }, { { {  -8,   1 }, {  -8,  -5 } }, 2,  1 }, { { {   1,  -3 }, {   1,  -8 } }, 1,  0 }, { { {  -9,   9 }, { -13,   5 } }, 3,  0 },
            { { {  -9,  -5 }, {  -9,  -8 } }, 3,  1 }, { { { -12,  -5 }, { -13,  10 } }, 3,  2 }, { { {  -1,   2 }, {  -1,  -5 } }, 1,  1 }, { { {   7,  -1 }, {   4,   3 } }, 2,  2 },
            { { { -11,  -7 }, { -13, -12 } }, 3,  2 }, { { {  12,   2 }, {   9,  -8 } }, 3,  0 }, { { {   4,   6 }, {   1,  14 } }, 1,  5 }, { { {  13,  13 }, {  12,   0 } }, 2,  1 },
            { { {  12,  -5 }, {   8,  -1 } }, 2,  1 }, { { {   4,  -9 }, {   2,  -7 } }, 1,  2 }, { { {   3,  -4 }, {   2,   0 } }, 1,  2 }, { { {  -5,   4 }, {  -5,   1 } }, 2,  1 },
            { { {  -3,   0 }, {  -3,  -3 } }, 1,  0 }, { { {  13, -13 }, {   7, -11 } }, 2,  0 }, { { {   3,   5 }, {   1,   2 } }, 1,  3 }, { { {  -4,  -8 }, {  -4, -13 } }, 2,  2 },
            { { {  -2,  -3 }, {  -3,   4 } }, 1,  2 }, { { {  -5,   5 }, {  -7,  13 } }, 2,  3 }, { { {  -9,  14 }, { -10,   6 } }, 1,  2 }, { { {  -5,  -7 }, {  -6,  -1 } }, 1,  3 },
            { { {  -8, -13 }, { -14,  -7 } }, 2,  0 }, { { {   3,  -9 }, {   2, -13 } }, 3,  2 }, { { {   5,  -7 }, {   3,  -5 } }, 1,  1 }, { { {   2,  -6 }, {   1,  -3 } }, 1,  2 },
            { { { -10,   1 }, { -15,  14 } }, 1,  6 }, { { {   1,  13 }, {   0,  12 } }, 2,  1 }, { { {   1,   4 }, {   1,   2 } }, 1,  0 }, { { {  -1,  -7 }, {  -3,   7 } }, 1,  4 },
            { { {  -4,  -2 }, {  -5,   0 } }, 1,  1 }, { { {  -9,   1 }, { -11,  -2 } }, 2,  1 }, { { {  14,  14 }, {   7,  -4 } }, 1,  2 }, { { {  13,   2 }, {  10,   4 } }, 2,  0 },
            { { {  -6,   4 }, {  -7,   1 } }, 2,  1 }, { { { -12,  -1 }, { -14,  -8 } }, 2,  2 }, { { {  -9,  -9 }, {  -9, -13 } }, 3,  1 }, { { {  -7,   3 }, {  -8,   8 } }, 1,  2 },
            { { {  12,   9 }, {  11,   9 } }, 3,  0 }, { { {  -3,  -1 }, {  -4,   2 } }, 1,  1 }, { { {   9, -14 }, {   3, -11 } }, 2,  2 }, { { {  -1, -12 }, {  -1, -13 } }, 3,  0 },
            { { {   9,   3 }, {   8,  13 } }, 2,  2 }, { { {   2,   8 }, {   2,   4 } }, 1,  1 }, { { { -12,  -6 }, { -15, -14 } }, 1,  3 }, { { { -11,   2 }, { -15,   2 } }, 1,  2 },
            { { {  -3,   6 }, {  -3,   3 } }, 1,  1 }, { { {  -6,  10 }, {  -8,  12 } }, 2,  0 }, { { {   8,  -3 }, {   8, -10 } }, 1,  1 }, { { {  -1,   3 }, {  -2,  -1 } }, 1,  4 },
            { { { -11,  -8 }, { -14,   0 } }, 2,  0 }, { { {  -4, -12 }, {  -5, -14 } }, 2,  0 }, { { {  -2,  13 }, {  -2,   8 } }, 1,  1 }, { { { -13,   4 }, { -15,   6 } }, 1,  1 },
            { { {   1, -11 }, {  -4, -15 } }, 1,  5 }, { { {   5,   0 }, {   4,   7 } }, 1,  2 }, { { {   9,   1 }, {   6,  -3 } }, 1,  0 }, { { { -10,   5 }, { -11,   0 } }, 1,  0 },
            { { {  -9,  -1 }, { -10,   3 } }, 1,  1 }, { { {   4,   1 }, {   3,  -1 } }, 1,  1 }, { { { -13,  13 }, { -13,   7 } }, 2,  1 }, { { {   0,   9 }, {   0,   6 } }, 1,  0 },
            { { {  12,   4 }, {  12,  -4 } }, 3,  0 }, { { {  11,  -3 }, {   7,  -6 } }, 1,  0 }, { { {   8,   8 }, {   1,  13 } }, 1,  5 }, { { {  -3, -14 }, {  -5, -12 } }, 1,  2 },
            { { {   6,   7 }, {   5,   5 } }, 1,  0 }, { { {   3,  14 }, {   3,   8 } }, 1,  1 }, { { {  14,  14 }, {  10,  11 } }, 1,  0 }, { { {   1, -11 }, {   1, -15 } }, 1,  0 },
            { { {  10,  -9 }, {   8, -15 } }, 1,  1 }, { { {  12, -10 }, {  12, -13 } }, 3,  0 }, { { { -13,  -1 }, { -15,  -3 } }, 1,  1 }, { { {  -9,  -8 }, { -11, -10 } }, 1,  1 },
            { { {   3,   0 }, {   3,  -1 } }, 1,  0 }, { { {  -4,  -7 }, {  -5,  -9 } }, 1,  0 }, { { {   1,   6 }, {   0,   4 } }, 1,  2 }, { { {  -4,  -2 }, {  -4,  -5 } }, 1,  1 },
            { { {   9,  13 }, {   7,  10 } }, 1,  0 }, { { {  -1,   3 }, {  -1,   2 } }, 1,  0 }, { { {  -3,   6 }, {  -4,   9 } }, 1,  0 }, { { { -15,   6 }, { -15,  -5 } }, 1,  0 },
            { { {  -2,  -4 }, {  -2,  -7 } }, 1,  1 }, { { {  -6,  11 }, {  -7,   7 } }, 1,  2 }, { { {  -7, -12 }, { -10, -15 } }, 1,  1 }, { { {   6,  -4 }, {   5,   0 } }, 1,  0 },
            { { { -11,  11 }, { -15,  12 } }, 1,  1 }, { { {  14,  -2 }, {  12,  -9 } }, 1,  0 }, { { {   1,  -7 }, {   0,   5 } }, 1,  2 }, { { {   1,  -7 }, {   1, -10 } }, 1,  0 },
            { { { -12, -12 }, { -15, -15 } }, 1,  1 }, { { {  14, -14 }, {  12, -11 } }, 1,  0 }, { { {   2, -12 }, {   1,  -9 } }, 1,  1 }, { { {  -1,  -3 }, {  -1,  -6 } }, 1,  1 },
            { { {  -4,  14 }, {  -5,  10 } }, 1,  2 }, { { {   0,  12 }, {  -1,  13 } }, 1,  1 }, { { {  14,  -5 }, {  12,  -5 } }, 1,  0 }, { { {  -7,  -4 }, {  -8,  -6 } }, 1,  1 },
            { { {   6,   3 }, {   5,   0 } }, 1,  0 }, { { {  14,   4 }, {  13,  10 } }, 1,  0 }, { { {   6,  -6 }, {   4,  -9 } }, 1,  2 }, { { { -14, -14 }, { -15, -11 } }, 1,  0 },
            { { {  -7,  -7 }, {  -9,  -7 } }, 1,  0 }, { { {  11, -15 }, {   9, -13 } }, 1,  0 }, { { {   5,   7 }, {   4,   9 } }, 1,  1 }, { { {  -6, -13 }, {  -8, -11 } }, 1,  1 },
            { { {   8, -15 }, {   7, -13 } }, 1,  0 }, { { { -11,  13 }, { -12,  12 } }, 1,  0 }, { { {  11,   7 }, {  10,   2 } }, 1,  1 }, { { {   6, -14 }, {   6, -15 } }, 1,  0 },
            { { {  -9,   4 }, { -10,   3 } }, 1,  0 }, { { {  -4,  10 }, {  -7,   9 } }, 1,  2 }, { { {  -9, -15 }, { -11, -14 } }, 1,  0 }, { { { -14,   5 }, { -15,   2 } }, 1,  0 },
            { { { -14,   8 }, { -15,   5 } }, 1,  0 }, { { {  -8,   1 }, {  -8,  -2 } }, 1,  0 }, { { {  14, -15 }, {  12, -14 } }, 1,  0 }, { { {  -1,  14 }, {  -1,  12 } }, 1,  0 },
            { { { -14, -11 }, { -15,  -7 } }, 1,  0 }, { { {   2,  12 }, {   1,  10 } }, 1,  1 }, { { {  -9,  13 }, { -15,  14 } }, 1,  1 }, { { {   1, -14 }, {   1, -15 } }, 1,  0 },
            { { {   5,  -3 }, {   5,  -7 } }, 1,  1 }, { { {  13,  -1 }, {  11,  -1 } }, 1,  0 }, { { {  12,  -8 }, {  11,  -9 } }, 2,  0 }, { { {  13,  -2 }, {  12,   2 } }, 1,  0 },
            { { { -14,  10 }, { -15,  14 } }, 1,  1 }, { { {   0,  -8 }, {   0, -10 } }, 1,  0 }, { { {  14,  10 }, {  10,   8 } }, 1,  0 }, { { {  -1,   1 }, {  -1,   0 } }, 6,  0 },
            { { {  14,  13 }, {  11,  14 } }, 1,  0 }, { { { -13,  14 }, { -15,  12 } }, 1,  0 }, { { {   1, -15 }, {   0, -14 } }, 1,  1 }, { { {  -2,  14 }, {  -4,  14 } }, 1,  1 },
            { { {  -4,   1 }, {  -4,   0 } }, 1,  0 }, { { { -12,   2 }, { -12,   0 } }, 1,  0 }, { { {  -5, -12 }, {  -5, -15 } }, 1,  1 }, { { {   5, -14 }, {   2, -15 } }, 1,  2 },
            { { {   0,   1 }, {   0,  -1 } }, 5,  0 }, { { { -13, -15 }, { -14, -14 } }, 1,  0 }, { { {   7,   1 }, {   7,   0 } }, 1,  0 }, { { {   2,  -4 }, {   2,  -5 } }, 1,  0 },
            { { {  -6,  12 }, {  -8,  14 } }, 1,  0 }, { { {  -4,  -6 }, {  -4,  -8 } }, 1,  1 }, { { { -14,  -2 }, { -15,  -7 } }, 1,  1 }, { { { -10,   9 }, { -10,   5 } }, 1,  1 },
            { { { -10, -14 }, { -14, -15 } }, 1,  1 }, { { {  14,   3 }, {  13,   4 } }, 1,  0 }, { { {   9,   5 }, {   7,   4 } }, 1,  0 }, { { {   0,  -6 }, {   0,  -7 } }, 1,  0 }
        };

        // Compute sine and cosign of angle.
        constexpr static const float degrees_to_radians = (static_cast<float>(M_PI) / 180.0f);
        const float angle_radians = angle_degrees * degrees_to_radians;
        const float angle_sin = std::sin(angle_radians);
        const float angle_cos = std::cos(angle_radians);

        // Code to process the keypoints in the image center
        // Note: The input data should be an integral image of the original image for beblib calculation.
        for (int i = 0; i < pattern_size / 8; ++i) {
            unsigned char byte = 0;
            for (int bit = 0; bit < 8; ++bit) {
                const abwl_parameters* abwl = &pattern[i * 8 + bit];
                // Rotate the pattern boxes.
                const sample_point boxes_rotated[2] = { {
                        round(angle_cos * static_cast<float>(abwl->boxes[0].offset_x) - angle_sin * static_cast<float>(abwl->boxes[0].offset_y)),
                        round(angle_sin * static_cast<float>(abwl->boxes[0].offset_x) + angle_cos * static_cast<float>(abwl->boxes[0].offset_y))
                    }, {
                        round(angle_cos * static_cast<float>(abwl->boxes[1].offset_x) - angle_sin * static_cast<float>(abwl->boxes[1].offset_y)),
                        round(angle_sin * static_cast<float>(abwl->boxes[1].offset_x) + angle_cos * static_cast<float>(abwl->boxes[1].offset_y))
                    }
                };
                // Calculate the box margins by adding and subtracting the box radius from the rotated boxes.
                const sample_point boxes_final[2][2] = { {
                        { boxes_rotated[0].offset_x - abwl->radius + 0, boxes_rotated[0].offset_y - abwl->radius + 0 },
                        { boxes_rotated[0].offset_x + abwl->radius + 1, boxes_rotated[0].offset_y + abwl->radius + 1 }
                    }, {
                        { boxes_rotated[1].offset_x - abwl->radius + 0, boxes_rotated[1].offset_y - abwl->radius + 0 },
                        { boxes_rotated[1].offset_x + abwl->radius + 1, boxes_rotated[1].offset_y + abwl->radius + 1 }
                    }
                };
                // Get the difference between the average level of the two boxes
                const int response = (
                    data_integral[boxes_final[0][0].offset_x + boxes_final[0][0].offset_y * stride] +
                    data_integral[boxes_final[0][1].offset_x + boxes_final[0][1].offset_y * stride] -
                    data_integral[boxes_final[0][1].offset_x + boxes_final[0][0].offset_y * stride] -
                    data_integral[boxes_final[0][0].offset_x + boxes_final[0][1].offset_y * stride] -
                    data_integral[boxes_final[1][0].offset_x + boxes_final[1][0].offset_y * stride] -
                    data_integral[boxes_final[1][1].offset_x + boxes_final[1][1].offset_y * stride] +
                    data_integral[boxes_final[1][1].offset_x + boxes_final[1][0].offset_y * stride] +
                    data_integral[boxes_final[1][0].offset_x + boxes_final[1][1].offset_y * stride]
                );
                // Compute the size of the box sizes.
                const int box_side = 1 + (abwl->radius * 2);
                // Set the bit to 1 if the response function is less or equal to the threshod
                byte |= (response <= (abwl->threshold * (box_side * box_side))) << (7 - bit);
            }
            descriptor[i] = byte;
        }
    }

    void beblid(
        const int* __restrict const data_integral,
        const int stride,
        const float angle_degrees,
        gtl::binary_descriptor<64>& descriptor
    );
    void beblid(
        const int* __restrict const data_integral,
        const int stride,
        const float angle_degrees,
        gtl::binary_descriptor<64>& descriptor
    ) {
        constexpr static const int pattern_size = 512;

        // Struct to contain the parameters of an Average Box Weak-Learner, a collection of these make up the pattern.
        struct sample_point {
            int offset_x;
            int offset_y;
        };
        struct abwl_parameters {
            sample_point boxes[2];
            int radius;
            int threshold;
        };
        abwl_parameters pattern[512] = {
            { { {   8,   2 }, {  -1,   1 } }, 6, 13 }, { { {   3,  -2 }, {  -3,   1 } }, 2, 18 }, { { {   7,   3 }, {  -4,  -1 } }, 6, 19 }, { { {   8,  -2 }, {   0,   0 } }, 6, 11 },
            { { {   0,  -1 }, {  -4,   0 } }, 1, 12 }, { { {   0,  -1 }, {  -9,  -6 } }, 4, 10 }, { { {   1,  -4 }, {  -8,   1 } }, 3, 16 }, { { {   8,  -4 }, {  -5,   1 } }, 7, 19 },
            { { {   3,   1 }, {  -2,  -5 } }, 3, 13 }, { { {   0,  -1 }, {  -3,  -1 } }, 1, 10 }, { { {   0,  -2 }, { -10,   2 } }, 5, 10 }, { { {   9, -11 }, {  -2,  -1 } }, 5, 15 },
            { { {   1,   2 }, {  -2,   0 } }, 2, 10 }, { { {   1,  -2 }, {  -2,  -3 } }, 2,  9 }, { { {  -1,  -2 }, { -10,   6 } }, 5,  7 }, { { {  -2,   0 }, { -11,   1 } }, 5,  5 },
            { { {   0,  -3 }, {  -1,   0 } }, 1,  4 }, { { {   2,   1 }, {  -1,  -1 } }, 1,  9 }, { { {  10,  10 }, {  -1,  -2 } }, 5, 12 }, { { {   2,   2 }, {   0,   0 } }, 1,  4 },
            { { {  -1,  -2 }, {  -2,  11 } }, 4,  0 }, { { {   1,  -3 }, {  -1,   0 } }, 1,  6 }, { { {  -1,  -1 }, {  -3,  -2 } }, 1,  6 }, { { {   2,   1 }, {   0,   0 } }, 1,  4 },
            { { {  -2,  -3 }, { -10,  -9 } }, 5,  4 }, { { {  11,  -4 }, {   1,  -1 } }, 4,  8 }, { { {  -4,  -3 }, {  -9,   8 } }, 7,  2 }, { { {   1,   2 }, {  -1,  -1 } }, 1,  6 },
            { { {   0,   0 }, {  -4,   1 } }, 1, 12 }, { { {  11,   4 }, {   0,   0 } }, 4, 11 }, { { {  -4,  -2 }, {  -9, -11 } }, 5,  0 }, { { {  -4,   0 }, {  -9,  10 } }, 5,  0 },
            { { {  -1,  -1 }, {  -1,  -9 } }, 4, -1 }, { { {   0,   1 }, {  -2,   1 } }, 2,  6 }, { { {   0,  -3 }, {  -6, -10 } }, 4,  7 }, { { {  -1,  10 }, {  -1,   3 } }, 4,  1 },
            { { {  10, -11 }, {   1,  -3 } }, 5,  7 }, { { {  -1,   7 }, { -11,  -4 } }, 5,  8 }, { { {   1,  -2 }, {  -6,  -5 } }, 3, 14 }, { { {   5,  11 }, {   1,   0 } }, 4,  5 },
            { { {  -1,   0 }, {  -2,   0 } }, 1,  3 }, { { {  -2,  -5 }, {  -4,  10 } }, 5,  1 }, { { {  -4,  -2 }, {  -4, -11 } }, 4, -3 }, { { {   0,   0 }, {  -2,  -4 } }, 1,  7 },
            { { {  -3,   4 }, {  -9,  -3 } }, 3,  4 }, { { {   3, -10 }, {   1,   0 } }, 6,  3 }, { { {  -5,  -7 }, {  -6,   3 } }, 4,  2 }, { { {  -2,  -1 }, {  -3,  -7 } }, 3,  1 },
            { { {   0,   0 }, {  -2,   9 } }, 3,  3 }, { { {  -8,  10 }, {  -8,  -3 } }, 4,  3 }, { { {   0,  -2 }, {  -1,   3 } }, 2,  3 }, { { {   2,  -1 }, {  -1,   0 } }, 1,  9 },
            { { {  10,   7 }, {   3,   0 } }, 5,  4 }, { { {  -5,   5 }, { -12,  -3 } }, 4,  1 }, { { {   4,   0 }, {   4, -11 } }, 4,  2 }, { { {  -1,   0 }, {  -1,  -3 } }, 1,  0 },
            { { {   0,   4 }, {   0,  -1 } }, 2,  0 }, { { {   6,  -3 }, {   1,  -2 } }, 2,  8 }, { { {   2,   1 }, {  -2,  -1 } }, 1, 13 }, { { {   5,  -4 }, {   4,  10 } }, 4,  3 },
            { { {  -6,  -9 }, {  -8,   2 } }, 5,  3 }, { { {  -5,  10 }, {  -5,   4 } }, 5,  2 }, { { {  -3,   5 }, {  -3,   1 } }, 3,  1 }, { { {  -6,   7 }, { -10,  -9 } }, 6,  1 },
            { { {  -6,  -2 }, { -11,  -2 } }, 5,  0 }, { { {   7,   9 }, {   0, -10 } }, 6,  8 }, { { {   2,   0 }, {   2, -11 } }, 4,  1 }, { { {   0,   0 }, {   0,  -2 } }, 1,  0 },
            { { {  -5,  -1 }, { -12,   7 } }, 4, -2 }, { { {   1,  -2 }, {   0,   0 } }, 1,  2 }, { { {  10, -12 }, {   4,   8 } }, 4,  2 }, { { {   4,   3 }, {   2,  -2 } }, 2,  3 },
            { { {  -2,   1 }, {  -6,  -1 } }, 2,  6 }, { { {   1,  -3 }, {   1,  -7 } }, 3,  0 }, { { {  10,   5 }, { -11,   8 } }, 5, 20 }, { { {   4,  -1 }, {   3,   9 } }, 5,  3 },
            { { {  11,  -1 }, {   3, -11 } }, 4,  5 }, { { {  -6,  -2 }, {  -6, -10 } }, 6, -2 }, { { {  -4,   6 }, {  -5,  -6 } }, 3,  2 }, { { {   1,   0 }, {   0,   4 } }, 2,  3 },
            { { {  -1,  -1 }, {  -4,   3 } }, 1,  7 }, { { {  -1,  -5 }, {  -2,   1 } }, 2,  4 }, { { {  -2,   4 }, {  -6,  -1 } }, 2,  7 }, { { {  -6,  -2 }, { -13,  -9 } }, 3, -5 },
            { { {  -4,   0 }, {  -7,  -5 } }, 3,  1 }, { { {   3,   1 }, {   1,  -5 } }, 2,  5 }, { { {  10,  -9 }, {   3,  10 } }, 5,  4 }, { { {   4,  -6 }, {   3,   2 } }, 3,  1 },
            { { {   1,  -3 }, {   0,   0 } }, 1,  2 }, { { {   1,  -5 }, {   0, -12 } }, 4,  2 }, { { {  -1,   3 }, {  -2,  -4 } }, 2,  3 }, { { {   1,   2 }, {   0,  -3 } }, 1,  3 },
            { { {  -5,  -7 }, { -12,  11 } }, 4, -1 }, { { {   5,   7 }, {   2,   1 } }, 3,  3 }, { { {  -9,   5 }, { -10,  -9 } }, 5, -1 }, { { {   9,  11 }, {   5,   2 } }, 4, -1 },
            { { {  -2,   1 }, {  -2,  -2 } }, 2,  0 }, { { {  -4,  -5 }, {  -8,   3 } }, 3,  3 }, { { {  -2,  -1 }, {  -3,   6 } }, 2,  0 }, { { {  -8,   7 }, { -11,   1 } }, 5,  1 },
            { { {  -1,   0 }, {  -2,  -8 } }, 2,  1 }, { { {   0,   8 }, {  -1,   2 } }, 3,  3 }, { { {   3,   9 }, {   3,   2 } }, 5, -1 }, { { {  -5,   7 }, {  -6,  -3 } }, 2,  3 },
            { { {   3,  -2 }, {   2,   6 } }, 2,  3 }, { { {  10,  -1 }, {   6, -10 } }, 4,  2 }, { { {   8,   1 }, {   3,  -8 } }, 3,  5 }, { { {   5,  -1 }, {   0,  -1 } }, 1, 10 },
            { { {  -1,  -2 }, {  -2,   4 } }, 1,  2 }, { { {   0,  11 }, {  -3, -11 } }, 4,  5 }, { { {  -6, -12 }, { -11,  -3 } }, 4,  3 }, { { {  -4,  -2 }, {  -6,  -6 } }, 2,  0 },
            { { {  -2,   2 }, {  -2,  -5 } }, 1, -1 }, { { {   7, -10 }, {   6,   4 } }, 5,  0 }, { { {  -2,  -4 }, {  -6,   3 } }, 2,  6 }, { { {   1,   2 }, {   1,  -1 } }, 2,  0 },
            { { {   0,  -1 }, {  -1,   2 } }, 1,  4 }, { { {  -5,  -3 }, { -13, -12 } }, 3, -4 }, { { {  -1,  -2 }, {  -1,  -8 } }, 2, -1 }, { { {  -5,   7 }, { -11,  10 } }, 5,  0 },
            { { {   4,   4 }, {   3,   1 } }, 2,  1 }, { { {   6,   3 }, {   3,   4 } }, 2,  3 }, { { {   0, -11 }, {  -1,   8 } }, 4,  2 }, { { {   2,  -1 }, {   0,  -4 } }, 1,  5 },
            { { {  12,  11 }, {   7,  -1 } }, 3, -2 }, { { {  -9,   9 }, { -10,   2 } }, 6,  2 }, { { {  -4,   3 }, {  -4,  -3 } }, 3,  0 }, { { {  -7,  -9 }, { -12,   1 } }, 4,  1 },
            { { {  -2,   2 }, {  -3,  -4 } }, 1,  2 }, { { {  -3,   0 }, {  -6,   7 } }, 2,  1 }, { { {   8,   9 }, {   7,  -3 } }, 6, -1 }, { { {  -8,  -3 }, {  -9, -12 } }, 4, -3 },
            { { {   1,  -1 }, {   1,  -5 } }, 2,  0 }, { { {   4,  -3 }, {   2,  -1 } }, 1,  3 }, { { {  12, -13 }, {   7,  -1 } }, 3, -2 }, { { {  -3,   1 }, {  -4,  -5 } }, 1,  0 },
            { { {   0,   2 }, {   0,  -5 } }, 1,  0 }, { { {  10,   0 }, {   8,  10 } }, 5,  2 }, { { {  -2,  -2 }, {  -5,  -1 } }, 1,  6 }, { { {  -1,  -7 }, {  -1, -13 } }, 3, -1 },
            { { {  -4,  12 }, {  -6,   3 } }, 3,  6 }, { { {   2,   1 }, {   2,  -2 } }, 2,  0 }, { { {   0,  -2 }, {  -2,  -1 } }, 1,  7 }, { { {   4,   2 }, {   3,  -6 } }, 2,  2 },
            { { {  11,  12 }, {   2,   8 } }, 3,  4 }, { { {  -1,  -5 }, {  -2,   9 } }, 2,  1 }, { { {   0,   2 }, {  -1,   0 } }, 1,  3 }, { { { -11,  11 }, { -12, -10 } }, 4,  0 },
            { { {   1,   4 }, {   1,  -2 } }, 1,  0 }, { { {  -3,  -1 }, {  -7,  -2 } }, 1,  3 }, { { {  -7,   7 }, { -13,   7 } }, 3, -1 }, { { {  -7,  -6 }, { -13,  -7 } }, 3, -2 },
            { { {   0,  11 }, {   0,  -7 } }, 3,  0 }, { { {  -3,   1 }, {  -5,  -1 } }, 1,  3 }, { { {  -2,   2 }, {  -2,  -1 } }, 1,  0 }, { { {  12,  -4 }, {   4,   5 } }, 3,  2 },
            { { {   7,  -9 }, { -12,  11 } }, 4, 16 }, { { {   0,   2 }, {   0,   0 } }, 1, -1 }, { { {  -3,   0 }, {  -4,   3 } }, 1,  1 }, { { {   4,  -5 }, {   3,   2 } }, 2,  1 },
            { { {   7,  -2 }, {   3,  -3 } }, 1,  2 }, { { {   7,  -6 }, {   3, -13 } }, 3,  5 }, { { {  -1,   2 }, {  -3,  -1 } }, 1,  6 }, { { {  -8,  -2 }, { -13,   3 } }, 3, -3 },
            { { {  -9,   2 }, { -13,   1 } }, 3, -2 }, { { {   6, -12 }, {   5,  -9 } }, 4,  0 }, { { { -13,  12 }, { -13,   2 } }, 3,  2 }, { { {   3,   4 }, {   1,  -2 } }, 1,  4 },
            { { {   0,   6 }, {  -1, -10 } }, 2,  2 }, { { {   6,   4 }, {   3,  13 } }, 2,  5 }, { { {  -5,   5 }, {  -7,  -2 } }, 2,  2 }, { { {  -9,  -7 }, { -10, -12 } }, 4, -2 },
            { { {  10,   3 }, {   7,  -7 } }, 4,  1 }, { { {   0,   1 }, {   0,  -4 } }, 2,  0 }, { { {  -1, -11 }, { -13, -12 } }, 3,  4 }, { { {   2,  -2 }, {   1,   1 } }, 1,  2 },
            { { {   3,  -5 }, {   1,  -3 } }, 1,  4 }, { { {  -5,   1 }, {  -6,  -6 } }, 2, -1 }, { { {  -1,   7 }, {  -4,  13 } }, 2,  3 }, { { {  12,   4 }, {   8,   1 } }, 3, -1 },
            { { {  -3,  -6 }, {  -5, -14 } }, 2, -1 }, { { {  12,  -5 }, {   7,  -1 } }, 3, -1 }, { { {   0,   5 }, {   0,   4 } }, 2,  0 }, { { {  -8,  -8 }, {  -9,   1 } }, 2,  2 },
            { { {  -1,   3 }, {  -2,   0 } }, 1,  4 }, { { {   1,  -5 }, {   1,  -6 } }, 2,  0 }, { { {   6,   5 }, {   3,   0 } }, 1,  1 }, { { {  -3,   1 }, {  -3,  -2 } }, 1,  0 },
            { { {   3,  -3 }, {   2,   0 } }, 1,  2 }, { { { -10,   9 }, { -11,  11 } }, 4, -1 }, { { {   0,  13 }, {   0,   6 } }, 2,  0 }, { { {   7,  11 }, {   7,   6 } }, 4, -1 },
            { { {  13, -14 }, {   6,  -6 } }, 2, -1 }, { { {   6,  -6 }, {   6, -11 } }, 5,  1 }, { { {   4,   0 }, {   3,  -1 } }, 1,  1 }, { { {   4,  -7 }, {   3,  -2 } }, 1,  0 },
            { { {  13,  13 }, {   7,   6 } }, 2, -1 }, { { {  -4,  -5 }, {  -6,   2 } }, 1,  3 }, { { { -12,   0 }, { -12, -14 } }, 2, -2 }, { { {  -2,  -8 }, {  -3, -14 } }, 2,  0 },
            { { {   0, -13 }, {  -1, -10 } }, 3,  2 }, { { {   7,  -8 }, {  -1, -14 } }, 2, 10 }, { { {   2,   3 }, {   2,   0 } }, 1,  0 }, { { {  -4,   5 }, { -10,   2 } }, 1,  2 },
            { { {   2,  -1 }, {   0,   3 } }, 1,  5 }, { { {   0,   5 }, {   0,  -8 } }, 2,  0 }, { { {   2,  10 }, {   1,   7 } }, 2,  1 }, { { {  -9,  -8 }, { -13, -13 } }, 3, -3 },
            { { { -10,   8 }, { -13,  12 } }, 3, -2 }, { { {  -6,   3 }, {  -7,  10 } }, 2, -3 }, { { {   1,  -7 }, {   0,  -3 } }, 1,  2 }, { { {  -3,  -1 }, {  -3,  -6 } }, 1, -2 },
            { { {   2,   0 }, {   2,  -4 } }, 1,  0 }, { { {   1,  -3 }, {   1,  -5 } }, 1,  0 }, { { { -10,   0 }, { -13,  -4 } }, 3, -2 }, { { {  -1,   5 }, {  -1,   4 } }, 1,  0 },
            { { {   7,   1 }, {   4,  -1 } }, 2,  1 }, { { {  12,   6 }, {   9,  -8 } }, 3,  0 }, { { { -11,   0 }, { -13,   9 } }, 3, -3 }, { { {  -2,  -3 }, {  -3,   4 } }, 1,  2 },
            { { {  12,  12 }, {   4,  11 } }, 3,  2 }, { { {  -1,  13 }, {  -8,   9 } }, 2,  7 }, { { {  -6,  12 }, { -11,   8 } }, 3,  2 }, { { {   3,  -2 }, {   2,  -3 } }, 1,  2 },
            { { {   3,  10 }, {  -2,  12 } }, 3,  7 }, { { {   2,   5 }, {   1,   2 } }, 1,  2 }, { { {  -3,   1 }, {  -7,   4 } }, 1,  2 }, { { {  -1,  -3 }, {  -3,  -5 } }, 1,  4 },
            { { {  11,  -9 }, {   9,  -1 } }, 4, -1 }, { { {  -4,  -1 }, {  -5,   1 } }, 1,  1 }, { { {  -3,   4 }, {  -4,  -1 } }, 1,  3 }, { { {  -1,   4 }, {  -2,   6 } }, 1,  2 },
            { { {   3,  13 }, {   1,  11 } }, 2,  2 }, { { {   3, -13 }, {   2, -11 } }, 3,  1 }, { { {  -7,   5 }, {  -7,   1 } }, 2,  1 }, { { {   3,   2 }, {   1,   2 } }, 1,  4 },
            { { {   9,  -3 }, {   8,   2 } }, 3,  0 }, { { {  -5,  -1 }, {  -6,  -3 } }, 1,  0 }, { { {  -7,  -7 }, {  -8, -13 } }, 2, -2 }, { { { -10,  -8 }, { -13,  -8 } }, 3, -1 },
            { { {  12,   3 }, {   7,  12 } }, 3,  2 }, { { {  -6,  14 }, {  -7,   7 } }, 1,  3 }, { { { -11, -11 }, { -13,   2 } }, 3,  1 }, { { {  -2,   1 }, {  -4,   4 } }, 1,  3 },
            { { {  13,   0 }, {   7,  -1 } }, 2, -1 }, { { {   7,  -1 }, {   5,   6 } }, 2,  2 }, { { {  12, -13 }, {   9, -11 } }, 3,  0 }, { { {  -4,   4 }, {  -5,   1 } }, 1,  2 },
            { { {   4,   6 }, {   2,   4 } }, 1,  2 }, { { { -11,  -7 }, { -14, -14 } }, 2, -3 }, { { {  -9,  11 }, { -13,   3 } }, 3,  1 }, { { {  -3, -14 }, {  -9, -10 } }, 2,  4 },
            { { {   2,  13 }, {   1,   9 } }, 2,  1 }, { { {  -1,   5 }, {  -2,   1 } }, 1,  4 }, { { {  -3,  13 }, {  -4,  10 } }, 2,  2 }, { { { -11,   6 }, { -12,  -4 } }, 2,  0 },
            { { {   0,   5 }, {   0,  -5 } }, 1,  0 }, { { {   0,   7 }, {   0,  -6 } }, 1,  0 }, { { {  -5, -11 }, {  -6,  -5 } }, 2,  3 }, { { {  -1,  -6 }, {  -2,   5 } }, 1,  3 },
            { { {  -6,   2 }, {  -7,   2 } }, 1,  0 }, { { {   1,  -7 }, {   0, -11 } }, 2,  2 }, { { {   3,   3 }, {   3,  -4 } }, 1,  0 }, { { {   9,  -4 }, {   6, -12 } }, 2,  2 },
            { { { -10,   2 }, { -15,   4 } }, 1, -3 }, { { {  -6,  -3 }, {  -6,  -6 } }, 2, -1 }, { { {   9,   0 }, {   6,   0 } }, 1,  0 }, { { {   2,  -3 }, {   2,  -4 } }, 1,  0 },
            { { {  -2,  -3 }, {  -4,  -5 } }, 1,  3 }, { { {  -6,  11 }, { -15,  13 } }, 1, -1 }, { { {  -3,  -8 }, {  -5, -10 } }, 1,  1 }, { { {   8,   8 }, {   5,  12 } }, 3,  2 },
            { { {   6,   1 }, {   4,   1 } }, 1,  1 }, { { {  -4,  -3 }, {  -5,   2 } }, 1,  1 }, { { {   7, -13 }, {   5,  -9 } }, 3,  0 }, { { {   2,  -4 }, {   1,  -3 } }, 1,  2 },
            { { {  -9,  12 }, {  -9,   9 } }, 3,  1 }, { { {  12,  12 }, {  12,  -1 } }, 3, -1 }, { { {   1,  -9 }, {   1, -14 } }, 2,  0 }, { { {   3,  -7 }, {   1,  -5 } }, 1,  3 },
            { { {  -2,   7 }, {  -2,  -7 } }, 1,  0 }, { { {  -9,   6 }, {  -9,   3 } }, 2,  1 }, { { {  13,   8 }, {  13, -14 } }, 2,  0 }, { { {  12,  -1 }, {   9,  -5 } }, 3,  0 },
            { { { -11,  -5 }, { -15,  -6 } }, 1, -2 }, { { { -14,   6 }, { -14, -14 } }, 2, -1 }, { { {   6,  14 }, {   0,  11 } }, 1,  5 }, { { {   4,  -1 }, {   3,  -3 } }, 1,  1 },
            { { {   7,   3 }, {   6,  -2 } }, 2,  0 }, { { { -11,  -9 }, { -11, -13 } }, 3, -1 }, { { {   3,   4 }, {   2,   2 } }, 1,  1 }, { { {  13,  -7 }, {   9,  -3 } }, 2, -1 },
            { { {  13,   7 }, {  10,   7 } }, 2,  0 }, { { {  -7,  -3 }, {  -8,  -8 } }, 1, -2 }, { { {   5,   6 }, {   5,   2 } }, 2, -1 }, { { {  13,  -4 }, {  12,   4 } }, 2,  0 },
            { { {   2, -11 }, { -15, -12 } }, 1,  9 }, { { {   1, -12 }, {   1, -14 } }, 2,  0 }, { { {  12,  13 }, {   8,   9 } }, 2,  0 }, { { {  -2,   7 }, {  -3,  13 } }, 1,  0 },
            { { {  -3, -11 }, {  -3, -15 } }, 1, -1 }, { { {   4,   9 }, {   4,   5 } }, 1, -1 }, { { { -10, -11 }, { -14,  -5 } }, 2,  0 }, { { {  -6,  -2 }, {  -7,   5 } }, 1, -1 },
            { { {  -3,   0 }, {  -3,  -2 } }, 1,  0 }, { { {   3,   1 }, {   2,  -2 } }, 1,  2 }, { { {  -2,   5 }, {  -2,   1 } }, 1,  1 }, { { {   4,  -6 }, {   2,  -4 } }, 1,  2 },
            { { {   4, -12 }, {   3, -13 } }, 3,  1 }, { { { -13,  -1 }, { -15,  14 } }, 1, -3 }, { { {  -3, -12 }, {  -8, -15 } }, 1,  2 }, { { {  -6,   2 }, {  -7,  -2 } }, 1,  0 },
            { { { -10,  -1 }, { -15,  -4 } }, 1, -3 }, { { {  -6,   9 }, {  -6,   4 } }, 1,  2 }, { { {  -2,  -5 }, {  -2,  -9 } }, 1, -1 }, { { {   6,  -7 }, {   4, -12 } }, 1,  2 },
            { { {  -1,  11 }, {  -8,  14 } }, 1,  4 }, { { {  -6, -11 }, {  -6, -14 } }, 2, -1 }, { { {   1,   0 }, {   0,  -4 } }, 1,  3 }, { { {  -1,   2 }, {  -1,  -6 } }, 1, -1 },
            { { {   4,  14 }, {   4,   7 } }, 1, -1 }, { { {  -2,  -7 }, {  -3,   6 } }, 1,  2 }, { { {  -2,   6 }, {  -4,   9 } }, 1,  2 }, { { { -11,   7 }, { -14,   7 } }, 2, -1 },
            { { {  -6,   0 }, {  -7,   0 } }, 1,  0 }, { { {  10, -14 }, {   3, -12 } }, 1,  2 }, { { { -13,   7 }, { -14,  -3 } }, 2,  0 }, { { { -13,   1 }, { -13,  -9 } }, 2, -1 },
            { { {  -1,  10 }, {  -1,   7 } }, 1,  0 }, { { {   6,  -2 }, {   6,  -8 } }, 1,  1 }, { { {  12,  -7 }, {  11, -10 } }, 3,  0 }, { { {  10,   6 }, {   9,  12 } }, 3,  1 },
            { { {   1,  -6 }, {   1, -11 } }, 1,  1 }, { { {  -5,   5 }, {  -6,   1 } }, 1,  2 }, { { {   4,   2 }, {   4,   0 } }, 1,  0 }, { { {  -9,   4 }, { -11,   4 } }, 1, -1 },
            { { {   1,   8 }, {   1,  -8 } }, 1,  0 }, { { {   8,  -7 }, {   4,  -7 } }, 1,  1 }, { { { -12,  -3 }, { -15,   0 } }, 1, -1 }, { { {  14, -15 }, {  12,   0 } }, 1, -1 },
            { { {   1,   5 }, {   1,   1 } }, 1,  0 }, { { {   3, -12 }, {  -5, -14 } }, 1,  9 }, { { {  14, -11 }, {   8, -10 } }, 1,  0 }, { { {   6,   3 }, {   6,  -4 } }, 1,  0 },
            { { {  -7,   0 }, {  -7,  -4 } }, 1, -1 }, { { {  -4,   0 }, {  -4,  -4 } }, 1, -1 }, { { {  -4,   8 }, {  -5,  13 } }, 1, -1 }, { { { -13, -10 }, { -15, -12 } }, 1, -1 },
            { { {   7,  13 }, {   4,  11 } }, 2,  1 }, { { {   7,   1 }, {   6,   0 } }, 1,  0 }, { { {  14,   4 }, {  10,   6 } }, 1,  0 }, { { {  -7, -14 }, { -10, -11 } }, 2,  1 },
            { { {   4,   1 }, {   3,   0 } }, 1,  1 }, { { {   2,  10 }, {   1,  14 } }, 1,  1 }, { { {  13,  -2 }, {  12,  -2 } }, 2,  0 }, { { {   4,  -3 }, {   3,  -2 } }, 1,  1 },
            { { {  -1,   7 }, {  -1,   5 } }, 1,  0 }, { { {  -8,  10 }, { -14,  14 } }, 1, -2 }, { { { -12, -11 }, { -13, -14 } }, 2, -1 }, { { {  -9,   0 }, { -10,  -4 } }, 1, -1 },
            { { {  13,  -7 }, {   7, -14 } }, 2,  1 }, { { {  -3, -14 }, {  -4, -11 } }, 2,  2 }, { { {   4,   2 }, {   3,   5 } }, 1,  2 }, { { {  -9,  13 }, { -14,   9 } }, 2,  0 },
            { { {   4, -13 }, {   2,  -8 } }, 1,  1 }, { { {  -2,  -2 }, {  -2,  -5 } }, 1, -1 }, { { {  -4,  -4 }, {  -4,  -6 } }, 1, -1 }, { { {   1,  11 }, {  -1,  14 } }, 1,  2 },
            { { {   6,  11 }, {   4,  13 } }, 2,  1 }, { { {  -9,  -4 }, { -11,  -7 } }, 1, -2 }, { { {  14,  14 }, {   8,   8 } }, 1,  0 }, { { {   3, -13 }, {   3, -14 } }, 2,  0 },
            { { {  -3,   3 }, {  -4,   2 } }, 1,  2 }, { { { -13,  14 }, { -14,   8 } }, 1,  1 }, { { {  -7,  -2 }, {  -9,   3 } }, 1, -1 }, { { {   1,   6 }, {   1,   2 } }, 1,  0 },
            { { {   2,   8 }, {   1,   6 } }, 1,  1 }, { { { -14,   2 }, { -15,   7 } }, 1, -1 }, { { {  14,   7 }, {   8,   3 } }, 1, -1 }, { { {  -5,  -6 }, {  -5, -11 } }, 1, -2 },
            { { {  -7,  14 }, {  -7,  11 } }, 1,  1 }, { { {   5,  -3 }, {   4,  -8 } }, 1,  2 }, { { { -10, -13 }, { -14, -14 } }, 2, -1 }, { { {   7,   6 }, {   6,  10 } }, 1,  1 },
            { { {  -4,  10 }, {  -5,   9 } }, 1,  1 }, { { {   6, -15 }, {   3, -11 } }, 1,  1 }, { { { -12,   8 }, { -15,   9 } }, 1, -1 }, { { { -11,  -3 }, { -11,  -9 } }, 1, -1 },
            { { {  10,   6 }, {   8,   0 } }, 1, -1 }, { { {  11,  -8 }, {  11, -13 } }, 2,  0 }, { { {  -3,   2 }, {  -3,   0 } }, 1,  0 }, { { {   3,  -1 }, {   2,   1 } }, 1,  2 },
            { { {  14,  13 }, {  10,  12 } }, 1,  0 }, { { {   4,  -1 }, {   4,  -2 } }, 1,  0 }, { { { -13,   2 }, { -15,  -1 } }, 1, -1 }, { { {   2,  -5 }, {   1,  -6 } }, 1,  2 },
            { { { -12,   2 }, { -12,   0 } }, 1,  0 }, { { {  -8,  11 }, { -11,  14 } }, 1, -1 }, { { {  14,  -1 }, {  12,   6 } }, 1,  0 }, { { {  -7,   3 }, {  -8,   6 } }, 1, -1 },
            { { {  14, -12 }, {  13, -12 } }, 1,  0 }, { { {   1,  -6 }, {   1,  -8 } }, 1,  0 }, { { {   6, -10 }, {   6, -15 } }, 1,  1 }, { { { -14,  -5 }, { -15,  -1 } }, 1,  0 },
            { { { -13,   0 }, { -15,   1 } }, 1, -1 }, { { {  -7, -13 }, {  -8, -14 } }, 2,  0 }, { { { -13,  -5 }, { -15,  -6 } }, 1, -1 }, { { {   0,  13 }, {  -1,  12 } }, 1,  1 },
            { { {  -1,   4 }, {  -1,   3 } }, 1,  0 }, { { {   4,   1 }, {   3,   1 } }, 1,  1 }, { { {  -6, -13 }, {  -7,  -8 } }, 1,  2 }, { { {  -6,   6 }, {  -9,  10 } }, 1, -1 },
            { { {  -8,   0 }, { -10,   0 } }, 1, -1 }, { { {   0,  12 }, {   0,   9 } }, 1,  0 }, { { {  -4,   9 }, {  -6,   5 } }, 1,  3 }, { { {  -8,  -7 }, {  -9,  -9 } }, 1, -1 },
            { { { -13, -15 }, { -15, -10 } }, 1,  0 }, { { {   0,  -9 }, {  -1,  -7 } }, 1,  2 }, { { {  14,   7 }, {  13,   7 } }, 1,  0 }, { { {   6,   8 }, {   5,  13 } }, 1,  1 },
            { { {  -1, -15 }, {  -2, -13 } }, 1,  1 }, { { {   2, -10 }, {   1,  -7 } }, 1,  1 }, { { {  10,   9 }, {   9,   3 } }, 1, -1 }, { { {   9,  -3 }, {   6,   2 } }, 1,  0 },
            { { {  -5, -15 }, {  -6, -13 } }, 1,  1 }, { { {  13,  12 }, {  12,  14 } }, 1,  0 }, { { {   0,   1 }, {   0,  -3 } }, 5,  0 }, { { {  12,   2 }, {  12,  -4 } }, 2,  0 },
            { { { -13,   6 }, { -15,   7 } }, 1, -1 }, { { {  -6,  -5 }, {  -6,  -7 } }, 1, -1 }, { { {  -9,  -3 }, { -10,   4 } }, 1, -1 }, { { { -15,  -1 }, { -15, -10 } }, 1, -1 },
            { { {   0,  -4 }, {   0,  -5 } }, 1,  0 }, { { { -13,  10 }, { -14,  14 } }, 1, -1 }, { { {  12,  14 }, {  10,   7 } }, 1, -1 }, { { {   1,   6 }, {   0,   9 } }, 1,  2 },
            { { {  14,  -3 }, {  10,  -9 } }, 1,  0 }, { { {  -6,  -8 }, {  -9,  -6 } }, 1,  1 }, { { { -14,  11 }, { -15,   6 } }, 1,  0 }, { { {  14,  -9 }, {  11,  -8 } }, 1,  0 },
            { { {   6,   3 }, {   5,   6 } }, 1,  1 }, { { { -11,   3 }, { -12,   5 } }, 1, -1 }, { { {   8, -10 }, {   7,  -5 } }, 1, -1 }, { { {   8,   1 }, {   7,  -2 } }, 1,  0 },
            { { {  14,  -9 }, {  12, -15 } }, 1,  0 }, { { {  -5,   0 }, {  -5,  -1 } }, 1,  0 }, { { {  13, -14 }, {  10, -12 } }, 1,  0 }, { { {   4, -12 }, {   2, -15 } }, 1,  2 },
            { { {   2, -14 }, {   1, -13 } }, 1,  1 }, { { {   4,  14 }, {   2,  13 } }, 1,  1 }, { { {  13,  -1 }, {  13,  -7 } }, 2,  0 }, { { {  -2,  -8 }, {  -2, -11 } }, 1, -1 },
            { { {   1,  -1 }, {   0,   2 } }, 1,  3 }, { { {  -4, -12 }, {  -5, -14 } }, 2,  0 }, { { {   7,  -8 }, {   5,  -5 } }, 1,  0 }, { { {  -8,  14 }, {  -9,   8 } }, 1,  2 },
            { { { -14,   4 }, { -15,   0 } }, 1,  0 }, { { {  -1,  10 }, {  -2,  13 } }, 1,  1 }, { { { -12,  14 }, { -13,  13 } }, 1,  0 }, { { {   3,   1 }, {   3,   0 } }, 1,  0 },
            { { {  -3,   1 }, {  -3,  -1 } }, 1,  0 }, { { { -14,  -7 }, { -15, -15 } }, 1, -1 }, { { {  14,  12 }, {  11,  11 } }, 1,  0 }, { { {  11, -12 }, {  10, -15 } }, 1,  0 },
            { { {   3,   7 }, {   3,   4 } }, 1, -1 }, { { {  -1,   8 }, {  -1,   7 } }, 1,  0 }, { { { -14,  13 }, { -15,  12 } }, 1,  0 }, { { { -14, -11 }, { -15, -10 } }, 1,  0 },
            { { {   8,  13 }, {   7,  10 } }, 1,  0 }, { { {  -3,  -4 }, {  -4,  -5 } }, 1,  1 }, { { {  -4,   1 }, {  -4,  -1 } }, 1,  0 }, { { {   8,  10 }, {   8,   6 } }, 1, -1 },
            { { {  -5, -13 }, {  -6, -11 } }, 1,  1 }, { { {  14, -14 }, {  14, -15 } }, 1,  0 }, { { {   2,  14 }, {   2,  13 } }, 1,  0 }, { { {  14,   9 }, {  13,  13 } }, 1,  0 },
            { { {  -4,  14 }, {  -6,  12 } }, 1,  1 }, { { {   8,  -4 }, {   6,  -2 } }, 1,  0 }, { { { -10,  -3 }, { -12,  -1 } }, 1, -1 }, { { { -14,  10 }, { -14,   7 } }, 1,  0 },
            { { {  -8,  -7 }, {  -9,  -3 } }, 1,  1 }, { { {  14, -15 }, {  11, -15 } }, 1,  0 }, { { {  10,  13 }, {   8,  14 } }, 1,  0 }, { { {   2,  -5 }, {   2,  -6 } }, 1,  0 },
            { { {  14,   3 }, {  13,   1 } }, 1,  0 }, { { {   4,  11 }, {   3,   8 } }, 1,  0 }, { { {  12,   4 }, {  10,   8 } }, 1,  0 }, { { {   9,  -7 }, {   8,  -7 } }, 1,  0 },
            { { {  11, -12 }, {   8, -10 } }, 1,  0 }, { { {   7,   5 }, {   6,   3 } }, 1,  0 }, { { {  -9,  -3 }, {  -9,  -6 } }, 1, -1 }, { { {  -4,  -5 }, {  -5,  -5 } }, 1,  1 },
            { { {  12,  10 }, {  10,  10 } }, 1,  0 }, { { {  -8, -12 }, { -10, -12 } }, 1,  0 }, { { {  -1,  14 }, {  -1,  12 } }, 1,  0 }, { { {  14,  -2 }, {  12,  -2 } }, 1,  0 },
            { { {   1,  -9 }, {   1, -11 } }, 1,  0 }, { { {  13,  -6 }, {  12, -10 } }, 1,  0 }, { { {  -4,   1 }, {  -5,   1 } }, 1,  1 }, { { {   0, -13 }, {   0, -15 } }, 1,  0 },
            { { {   5, -13 }, {   3, -13 } }, 1,  1 }, { { {  -4,  14 }, {  -5,  12 } }, 1,  1 }, { { {   2,   0 }, {   2,  -1 } }, 1,  0 }, { { {  -8,   2 }, {  -9,   4 } }, 1, -1 },
            { { { -11, -12 }, { -15, -15 } }, 1, -1 }, { { { -13,  11 }, { -15,  14 } }, 1, -1 }, { { {  10, -12 }, {  10, -15 } }, 1,  0 }, { { { -11,   5 }, { -14,   4 } }, 1, -1 },
            { { {  -2, -15 }, {  -3, -13 } }, 1,  1 }, { { {  14,  -7 }, {  12,  -8 } }, 1,  0 }, { { {  -3,  -1 }, {  -4,  -4 } }, 1,  1 }, { { {  -9,   7 }, { -10,   9 } }, 1, -1 }
        };

        // Compute sine and cosign of angle.
        constexpr static const float degrees_to_radians = (static_cast<float>(M_PI) / 180.0f);
        const float angle_radians = angle_degrees * degrees_to_radians;
        const float angle_sin = std::sin(angle_radians);
        const float angle_cos = std::cos(angle_radians);

        // Code to process the keypoints in the image center
        // Note: The input data should be an integral image of the original image for beblib calculation.
        for (int i = 0; i < pattern_size / 8; ++i) {
            unsigned char byte = 0;
            for (int bit = 0; bit < 8; ++bit) {
                const abwl_parameters* abwl = &pattern[i * 8 + bit];
                // Rotate the pattern boxes.
                const sample_point boxes_rotated[2] = { {
                        static_cast<int>((angle_cos * static_cast<float>(abwl->boxes[0].offset_x) - angle_sin * static_cast<float>(abwl->boxes[0].offset_y)) + 0.5f),
                        static_cast<int>((angle_sin * static_cast<float>(abwl->boxes[0].offset_x) + angle_cos * static_cast<float>(abwl->boxes[0].offset_y)) + 0.5f)
                    }, {
                        static_cast<int>((angle_cos * static_cast<float>(abwl->boxes[1].offset_x) - angle_sin * static_cast<float>(abwl->boxes[1].offset_y)) + 0.5f),
                        static_cast<int>((angle_sin * static_cast<float>(abwl->boxes[1].offset_x) + angle_cos * static_cast<float>(abwl->boxes[1].offset_y)) + 0.5f)
                    }
                };
                // Calculate the box margins by adding and subtracting the box radius from the rotated boxes.
                const sample_point boxes_final[2][2] = { {
                        { boxes_rotated[0].offset_x - abwl->radius + 0, boxes_rotated[0].offset_y - abwl->radius + 0 },
                        { boxes_rotated[0].offset_x + abwl->radius + 1, boxes_rotated[0].offset_y + abwl->radius + 1 }
                    }, {
                        { boxes_rotated[1].offset_x - abwl->radius + 0, boxes_rotated[1].offset_y - abwl->radius + 0 },
                        { boxes_rotated[1].offset_x + abwl->radius + 1, boxes_rotated[1].offset_y + abwl->radius + 1 }
                    }
                };
                // Get the difference between the average level of the two boxes
                const int response = (
                    data_integral[boxes_final[0][0].offset_x + boxes_final[0][0].offset_y * stride] +
                    data_integral[boxes_final[0][1].offset_x + boxes_final[0][1].offset_y * stride] -
                    data_integral[boxes_final[0][1].offset_x + boxes_final[0][0].offset_y * stride] -
                    data_integral[boxes_final[0][0].offset_x + boxes_final[0][1].offset_y * stride] -
                    data_integral[boxes_final[1][0].offset_x + boxes_final[1][0].offset_y * stride] -
                    data_integral[boxes_final[1][1].offset_x + boxes_final[1][1].offset_y * stride] +
                    data_integral[boxes_final[1][1].offset_x + boxes_final[1][0].offset_y * stride] +
                    data_integral[boxes_final[1][0].offset_x + boxes_final[1][1].offset_y * stride]
                );
                // Compute the size of the box sizes.
                const int box_side = 1 + (abwl->radius * 2);
                // Set the bit to 1 if the response function is less or equal to the threshod
                byte |= (response <= (abwl->threshold * (box_side * box_side))) << (7 - bit);
            }
            descriptor[i] = byte;
        }
    }
}

#endif // GTL_VISION_FEATURE_DESCRIPTOR_BEBLID_HPP
