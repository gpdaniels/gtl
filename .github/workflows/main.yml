name: CI

on: 
  push:
    branches:
    - master
  pull_request:
    branches:
    - master
  workflow_dispatch:

jobs:
  windows:
    name: Build on ${{ matrix.os }} with ${{ matrix.compiler_version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        compiler_version: ['default']
        os: [windows-latest]

    steps:
    - uses: actions/checkout@v2
    - name: Compile and test in Debug.
      run: bash compile.sh Debug
    - name: Compile and test in Release.
      run: bash compile.sh Release
    - name: Compile and test in RelWithDebInfo.
      run: bash compile.sh RelWithDebInfo
    - name: Compile and test in MinSizeRel.
      run: bash compile.sh MinSizeRel

  macOS:
    name: Build on ${{ matrix.os }} with ${{ matrix.compiler_version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        compiler_version: ['default']
        os: [macOS-latest]

    steps:
    - uses: actions/checkout@v2
    - name: Compile and test in Debug.
      run: bash compile.sh Debug
    - name: Compile and test in Release.
      run: bash compile.sh Release
    - name: Compile and test in RelWithDebInfo.
      run: bash compile.sh RelWithDebInfo
    - name: Compile and test in MinSizeRel.
      run: bash compile.sh MinSizeRel

  linux:
    name: Build on ${{ matrix.os }} with ${{ matrix.compiler_version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        compiler_version: ['default']
        os: [ubuntu-latest]

    steps:
    - uses: actions/checkout@v2
    - name: Installing valgrind
      run: |
        sudo apt-get update -qq
        sudo apt-get install -qq valgrind
    - name: Compile and test in Debug.
      run: bash compile.sh Debug
    - name: Compile and test in Release.
      run: bash compile.sh Release
    - name: Compile and test in RelWithDebInfo.
      run: bash compile.sh RelWithDebInfo
    - name: Compile and test in MinSizeRel.
      run: bash compile.sh MinSizeRel
