/*
Copyright (C) 2018-2023 Geoffrey Daniels. https://gpdaniels.com/

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, version 3 of the License only.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/

#pragma once
#ifndef GTL_TYPE_STANDARD_HPP
#define GTL_TYPE_STANDARD_HPP

// Summary: Standard type size sanity. [wip]

namespace gtl {
    using u8 = unsigned char;
    using u16 = unsigned short;
    using u32 = unsigned int;
    using u64 = unsigned long long;
    
    using s8 = signed char;
    using s16 = signed short;
    using s32 = signed int;
    using s64 = signed long long;
    
    using f32 = float;
    using f64 = double;
}

namespace gtl {
    static_assert(sizeof(u8 ) == 1);
    static_assert(sizeof(u16) == 2);
    static_assert(sizeof(u32) == 4);
    static_assert(sizeof(u64) == 8);
                              
    static_assert(sizeof(s8 ) == 1);
    static_assert(sizeof(s16) == 2);
    static_assert(sizeof(s32) == 4);
    static_assert(sizeof(s64) == 8);
                              
    static_assert(sizeof(f32) == 4);
    static_assert(sizeof(f64) == 8);
}

#endif // GTL_TYPE_STANDARD_HPP
