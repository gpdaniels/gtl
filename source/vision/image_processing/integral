/*
Copyright (C) 2018-2024 Geoffrey Daniels. https://gpdaniels.com/

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, version 3 of the License only.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/

#pragma once
#ifndef GTL_VISION_IMAGE_PROCESSING_INTEGRAL_HPP
#define GTL_VISION_IMAGE_PROCESSING_INTEGRAL_HPP

// Summary: Simple integral image processor. [wip]

namespace gtl {
    void integral(
        const unsigned char* __restrict const data,
        const int width,
        const int height,
        const int stride,
        int* __restrict const data_integral);

    void integral(
        const unsigned char* __restrict const data,
        const int width,
        const int height,
        const int stride,
        int* __restrict const data_integral) {
        // First line: Sum from left.
        int sum = 0;
        for (int x = 0; x < width; ++x) {
            sum += data[x];
            data_integral[x] = sum;
        }

        // Remaining lines: Sum from above and left.
        for (int y = 1; y < height; ++y) {
            sum = 0;
            for (int x = 0; x < width; ++x) {
                sum += data[x + y * stride];
                data_integral[x + y * stride] = sum + data_integral[x + (y - 1) * stride];
            }
        }
    }
}

#endif // GTL_VISION_IMAGE_PROCESSING_INTEGRAL_HPP
